{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport AuthService from \"../services/AuthService\";\nexport const login = createAction(\"auth/login\");\nexport const registration = createAction(\"auth/registration\");\nexport const logout = createAction(\"auth/logout\");\nexport const authReducer = createReducer({\n  isAuth: localStorage.getItem('token') ? true : false,\n  email: localStorage.getItem('email')\n}, builder => {\n  builder.addCase(login, (state, action) => {\n    AuthService.login(action.payload.email, action.payload.password);\n    state.email = action.payload.email;\n    localStorage.setItem('email', state.email);\n    state.isAuth = true;\n  }).addCase(registration, (state, action) => {\n    AuthService.registration(action.payload.email, action.payload.password);\n    state.email = action.payload.email;\n    localStorage.setItem('email', state.email);\n    state.isAuth = true;\n  }).addCase(logout, (state, action) => {\n    AuthService.logout();\n    state.isAuth = false;\n    localStorage.removeItem('email');\n  });\n});\nexport const selectAuth = state => state.auth;","map":{"version":3,"names":["createAction","createReducer","AuthService","login","registration","logout","authReducer","isAuth","localStorage","getItem","email","builder","addCase","state","action","payload","password","setItem","removeItem","selectAuth","auth"],"sources":["D:/launcher/client/src/reducers/authReducer.jsx"],"sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nexport const login = createAction(\"auth/login\");\r\nexport const registration = createAction(\"auth/registration\");\r\nexport const logout = createAction(\"auth/logout\");\r\n\r\nexport const authReducer = createReducer({isAuth: localStorage.getItem('token') ? true : false, email: localStorage.getItem('email')}, builder => {\r\n    builder.addCase(login, (state, action) => {\r\n        AuthService.login(action.payload.email, action.payload.password);\r\n        state.email = action.payload.email;\r\n        localStorage.setItem('email', state.email);\r\n        state.isAuth = true;\r\n    }).addCase(registration, (state, action) => {\r\n        AuthService.registration(action.payload.email, action.payload.password);\r\n        state.email = action.payload.email;\r\n        localStorage.setItem('email', state.email);\r\n        state.isAuth = true;\r\n    }).addCase(logout, (state, action) => {\r\n        AuthService.logout();\r\n        state.isAuth = false;\r\n        localStorage.removeItem('email');\r\n    })\r\n})\r\n\r\nexport const selectAuth = (state) => state.auth;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,OAAO,MAAMC,KAAK,GAAGH,YAAY,CAAC,YAAY,CAAC;AAC/C,OAAO,MAAMI,YAAY,GAAGJ,YAAY,CAAC,mBAAmB,CAAC;AAC7D,OAAO,MAAMK,MAAM,GAAGL,YAAY,CAAC,aAAa,CAAC;AAEjD,OAAO,MAAMM,WAAW,GAAGL,aAAa,CAAC;EAACM,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;EAAEC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO;AAAC,CAAC,EAAEE,OAAO,IAAI;EAC9IA,OAAO,CAACC,OAAO,CAACT,KAAK,EAAE,CAACU,KAAK,EAAEC,MAAM,KAAK;IACtCZ,WAAW,CAACC,KAAK,CAACW,MAAM,CAACC,OAAO,CAACL,KAAK,EAAEI,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAChEH,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO,CAACL,KAAK;IAClCF,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAACH,KAAK,CAAC;IAC1CG,KAAK,CAACN,MAAM,GAAG,IAAI;EACvB,CAAC,CAAC,CAACK,OAAO,CAACR,YAAY,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;IACxCZ,WAAW,CAACE,YAAY,CAACU,MAAM,CAACC,OAAO,CAACL,KAAK,EAAEI,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IACvEH,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO,CAACL,KAAK;IAClCF,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAACH,KAAK,CAAC;IAC1CG,KAAK,CAACN,MAAM,GAAG,IAAI;EACvB,CAAC,CAAC,CAACK,OAAO,CAACP,MAAM,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IAClCZ,WAAW,CAACG,MAAM,CAAC,CAAC;IACpBQ,KAAK,CAACN,MAAM,GAAG,KAAK;IACpBC,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAIN,KAAK,IAAKA,KAAK,CAACO,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}