{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nexport const addGood = createAction('counter/addGood');\nexport const counterReducer = createReducer({\n  value: localStorage.getItem(\"cart\") === null ? 0 : JSON.parse(localStorage.getItem(\"cart\"))\n}, builder => {\n  builder.addCase(addGood, (state, action) => {\n    state.value += action.payload;\n    localStorage.setItem('cart', state.value);\n  });\n});\nexport const selectCount = state => state.counter.value;","map":{"version":3,"names":["createAction","createReducer","addGood","counterReducer","value","localStorage","getItem","JSON","parse","builder","addCase","state","action","payload","setItem","selectCount","counter"],"sources":["D:/launcher/src/reducers/counter.jsx"],"sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nexport const addGood = createAction('counter/addGood');\r\n\r\nexport const counterReducer = createReducer({value: localStorage.getItem(\"cart\") === null ? 0 : JSON.parse(localStorage.getItem(\"cart\"))}, (builder) => {\r\n    builder\r\n        .addCase(addGood, (state, action) => {\r\n            state.value += action.payload;\r\n            localStorage.setItem('cart', state.value)\r\n        })\r\n})\r\n\r\nexport const selectCount = (state) => state.counter.value;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAE9D,OAAO,MAAMC,OAAO,GAAGF,YAAY,CAAC,iBAAiB,CAAC;AAEtD,OAAO,MAAMG,cAAc,GAAGF,aAAa,CAAC;EAACG,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AAAC,CAAC,EAAGG,OAAO,IAAK;EACpJA,OAAO,CACFC,OAAO,CAACR,OAAO,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;IACjCD,KAAK,CAACP,KAAK,IAAIQ,MAAM,CAACC,OAAO;IAC7BR,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEH,KAAK,CAACP,KAAK,CAAC;EAC7C,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,OAAO,MAAMW,WAAW,GAAIJ,KAAK,IAAKA,KAAK,CAACK,OAAO,CAACZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}